{"version":3,"sources":["webpack:///./src/pages/login.js","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/core-js/internals/object-to-array.js"],"names":["LoginPage","location","useState","loading","setLoading","apiError","setApiError","updateToken","useContext","AuthContext","useForm","login","email","values","password","then","id","token","localStorage","setItem","navigate","catch","e","errors","validate","handleChange","handleSubmit","title","as","onSubmit","error","length","Object","entries","Array","isArray","header","content","map","detail","key","status","handleErrors","Field","htmlFor","fluid","name","type","autoFocus","onChange","value","data-testid","style","color","test","$","$entries","target","stat","O","DESCRIPTORS","objectKeys","toIndexedObject","propertyIsEnumerable","f","createMethod","TO_ENTRIES","it","keys","i","result","call","push","module","exports"],"mappings":"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","file":"component---src-pages-login-js-70b6f2eb9f4ca6879420.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-use-before-define */\n\nimport React, {useState, useContext} from 'react'\nimport {navigate} from 'gatsby'\nimport {Header, Form, Input, Button, Segment, Message} from 'semantic-ui-react'\nimport SEO from '../components/SEO'\nimport {login} from '../../lib/moltin'\nimport AuthContext from '../components/Context/AuthContext'\nimport Layout from '../components/Layout'\nimport useForm from '../components/Hooks/useForm'\n\nconst LoginPage = ({location}) => {\n  const [loading, setLoading] = useState(false)\n  const [apiError, setApiError] = useState([])\n  const {updateToken} = useContext(AuthContext)\n\n  const formLogin = () => {\n    setLoading(true)\n    login({email: values.email, password: values.password})\n      .then(({id, token}) => {\n        localStorage.setItem('customerToken', token)\n        localStorage.setItem('mcustomer', id)\n        updateToken()\n        navigate('/myaccount/')\n      })\n      .catch(e => {\n        setLoading(false)\n        setApiError(e.errors || e)\n      })\n  }\n  const {values, handleChange, handleSubmit, errors} = useForm(\n    formLogin,\n    validate,\n  )\n\n  const handleErrors = errors => {\n    if (!Array.isArray(errors) && !errors.length > 0) {\n      return (\n        <Message\n          error\n          header=\"Sorry\"\n          content=\"Please check your login details and try again.\"\n        />\n      )\n    }\n    return errors.map(e => (\n      <Message error header={e.title} content={e.detail} key={e.status} />\n    ))\n  }\n  return (\n    <Layout location={location}>\n      <SEO title=\"Login\" />\n      <Header as=\"h1\">Log in to your account</Header>\n      <Form\n        onSubmit={handleSubmit}\n        loading={loading}\n        error={apiError.length !== 0 || Object.entries(errors).length !== 0}\n      >\n        {apiError.length !== 0 ? handleErrors(errors) : null}\n        <Segment>\n          <Form.Field>\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              id=\"email\"\n              fluid\n              name=\"email\"\n              type=\"email\"\n              autoFocus\n              onChange={handleChange}\n              value={values.email || ''}\n            />\n          </Form.Field>\n          {errors.email && (\n            <p data-testid=\"error\" style={{color: 'red'}}>\n              {errors.email}\n            </p>\n          )}\n          <Form.Field>\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              id=\"password\"\n              fluid\n              name=\"password\"\n              type=\"password\"\n              value={values.password || ''}\n              onChange={handleChange}\n            />\n          </Form.Field>\n          {errors.password && <p style={{color: 'red'}}>{errors.password}</p>}\n          <Button type=\"submit\" color=\"orange\">\n            Login\n          </Button>\n        </Segment>\n      </Form>\n    </Layout>\n  )\n}\n\nexport default LoginPage\n\nconst validate = values => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Email address is required'\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid'\n  }\n  if (!values.password) {\n    errors.password = 'Password is required'\n  }\n  return errors\n}\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n"],"sourceRoot":""}